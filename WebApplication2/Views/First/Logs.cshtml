@model IEnumerable<WebApplication2.Models.Logging.Log>

@{
    ViewBag.Title = "Logs";
}

<h2>Logs</h2>

<select id="combo" onchange="filterTable()">
    <option value="">ALL</option>
    @foreach (Enum logType in Enum.GetValues(typeof(SharedResources.Logging.MessageTypeEnum)))
    {
        <option value="@logType">@logType</option>
    }
</select>

<script>
    function filterTable() {
        var logTable = document.getElementById(logsTable);
        var tableRows = logsTable.getElementsByTagName("tr");
        //i=0 is table columns titles.
        var i = 1;
        var e = document.getElementById("combo");
        var filterBy = e.options[e.selectedIndex].value;
        var tableRowsCount = tableRows.length;
        for (; i < tableRowsCount; i++) {
            var log = tableRows[i].getElementsByTagName("td");
            var logTypeTd = log[0];
            var logType = $(logTypeTd).text();

            if ((filterBy != "") && (logType.trim() != filterBy)) {
                tableRows[i].style.display = "none";
            } else {
                tableRows[i].style.display = 'table-row'
            }
        }
}
</script>
    <table class="table" id="logsTable">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Message)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Message)
                </td>
            </tr>
        }

    </table>

